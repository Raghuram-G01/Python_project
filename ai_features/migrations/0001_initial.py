# Generated by Django 4.2.7 on 2025-05-29 05:06

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('blog', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SEOAnalysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('overall_score', models.FloatField(default=0.0)),
                ('keyword_density_score', models.FloatField(default=0.0)),
                ('readability_score', models.FloatField(default=0.0)),
                ('meta_optimization_score', models.FloatField(default=0.0)),
                ('content_structure_score', models.FloatField(default=0.0)),
                ('keyword_analysis', models.JSONField(default=dict)),
                ('readability_metrics', models.JSONField(default=dict)),
                ('content_suggestions', models.JSONField(default=list)),
                ('meta_suggestions', models.JSONField(default=list)),
                ('title_suggestions', models.JSONField(default=list)),
                ('meta_description_suggestions', models.JSONField(default=list)),
                ('keyword_suggestions', models.JSONField(default=list)),
                ('analyzed_at', models.DateTimeField(auto_now=True)),
                ('analysis_version', models.CharField(default='1.0', max_length=10)),
                ('blog_post', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='blog.blogpost')),
            ],
        ),
        migrations.CreateModel(
            name='ContentTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('template_type', models.CharField(choices=[('blog_post', 'Blog Post'), ('tutorial', 'Tutorial'), ('review', 'Review'), ('news', 'News Article'), ('opinion', 'Opinion Piece'), ('listicle', 'Listicle')], max_length=20)),
                ('description', models.TextField()),
                ('prompt_template', models.TextField(help_text='AI prompt template with placeholders')),
                ('structure_guidelines', models.JSONField(default=dict)),
                ('tone_settings', models.JSONField(default=dict)),
                ('usage_count', models.PositiveIntegerField(default=0)),
                ('success_rate', models.FloatField(default=0.0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ChatbotConversation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_id', models.UUIDField(db_index=True, default=uuid.uuid4)),
                ('messages', models.JSONField(default=list)),
                ('context', models.JSONField(default=dict)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('last_activity', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('message_count', models.PositiveIntegerField(default=0)),
                ('user_satisfaction', models.IntegerField(blank=True, help_text='1-5 rating', null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-last_activity'],
                'indexes': [models.Index(fields=['session_id'], name='ai_features_session_c418b7_idx'), models.Index(fields=['user', 'started_at'], name='ai_features_user_id_102fbb_idx')],
            },
        ),
        migrations.CreateModel(
            name='AITask',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('task_type', models.CharField(choices=[('content_generation', 'Content Generation'), ('summarization', 'Summarization'), ('seo_optimization', 'SEO Optimization'), ('sentiment_analysis', 'Sentiment Analysis'), ('moderation', 'Content Moderation'), ('embedding_generation', 'Embedding Generation'), ('personalization', 'Personalization')], max_length=50)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('input_data', models.JSONField(default=dict)),
                ('output_data', models.JSONField(default=dict)),
                ('error_message', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('processing_time', models.FloatField(blank=True, help_text='Time in seconds', null=True)),
                ('model_used', models.CharField(blank=True, max_length=100)),
                ('api_cost', models.DecimalField(blank=True, decimal_places=6, max_digits=10, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['task_type', 'status'], name='ai_features_task_ty_a41cdd_idx'), models.Index(fields=['user', 'created_at'], name='ai_features_user_id_035b16_idx')],
            },
        ),
    ]
